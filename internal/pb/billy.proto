// Go gRPC  Tutorials:
//
// https://grpc.io/docs/languages/go/quickstart/ and https://github.com/grpc/grpc-go/tree/master/examples/helloworld
// https://grpc.io/docs/languages/go/basics/
// https://pascalallen.medium.com/how-to-build-a-grpc-server-in-go-943f337c4e05
//
// Compile with:
// protoc --go_out=. --go_opt=paths=source_relative \
//        --go-grpc_out=. --go-grpc_opt=paths=source_relative \
//        billy.proto

syntax = "proto3";

option go_package = "github.com/tillkuhn/billy-idle/pb";

// Protocol Buffers Well-Known Types
// https://protobuf.dev/reference/protobuf/google.protobuf/
import "google/protobuf/duration.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
// import "google/protobuf/wrappers.proto"; // For BoolValue and others

package pb;

// The Billy Service Definition (a rpc can only take a single argument)
service Billy {
  // set mode (see commends below for empty)
  rpc WhatsUp (google.protobuf.Empty) returns (StatusResponse) {}
  rpc Suspend (SuspendRequest) returns (SuspendResponse) {}
}

message SuspendRequest {
  State state = 1;
  google.protobuf.Duration duration = 2;
}

message SuspendResponse {
  // bool previousIdleState = 1;
  //bool currentIdleState = 2;
  State previousState = 1;
  State state = 2;
  google.protobuf.Timestamp until = 3;
}

// The response message containing the newly applied mode
message StatusResponse {
  string message = 1;
  google.protobuf.Timestamp time = 2;
}

// https://www.reddit.com/r/golang/comments/dysrzw/protobuf_and_enum_type/
// https://protobuf.dev/programming-guides/enum/
enum State {
  IDLE = 0;
  BUSY = 1;
}

// https://stackoverflow.com/questions/31768665/can-i-define-a-grpc-call-with-a-null-request-or-response
// Looking through the default proto files, I came across Empty that is exactly like the Null type I suggested above :)
// A generic empty message that you can re-use to avoid defining duplicated
// empty messages in your APIs. A typical example is to use it as the request
// or the response type of an API method. For instance:
//
//     service Foo {
//       rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
//     }
//
